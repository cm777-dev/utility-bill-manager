{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Paper,Typography,Grid,Select,MenuItem,FormControl,InputLabel,Button,Stack,CircularProgress,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Tooltip,IconButton,Chip,LinearProgress,Card,CardContent}from'@mui/material';import InfoIcon from'@mui/icons-material/Info';import CompareArrowsIcon from'@mui/icons-material/CompareArrows';import TrendingUpIcon from'@mui/icons-material/TrendingUp';import TrendingDownIcon from'@mui/icons-material/TrendingDown';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip as ChartTooltip,Legend}from'chart.js';import{Line,Bar}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,ChartTooltip,Legend);export default function Benchmarking(){const[loading,setLoading]=useState(true);const[utilityType,setUtilityType]=useState('electricity');const[timeframe,setTimeframe]=useState('monthly');const[region,setRegion]=useState('all');const[industryType,setIndustryType]=useState('all');const[buildingSize,setBuildingSize]=useState('all');const[benchmarkData,setBenchmarkData]=useState(null);// Simulated benchmark data\nconst generateBenchmarkData=()=>{const months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];const yourData=months.map(()=>Math.random()*100+50);const industryAvg=months.map(()=>75);const topPerformers=months.map(()=>45);return{consumption:{labels:months,datasets:[{label:'Your Usage',data:yourData,borderColor:'rgb(53, 162, 235)',backgroundColor:'rgba(53, 162, 235, 0.5)'},{label:'Industry Average',data:industryAvg,borderColor:'rgb(255, 99, 132)',backgroundColor:'rgba(255, 99, 132, 0.5)'},{label:'Top Performers',data:topPerformers,borderColor:'rgb(75, 192, 192)',backgroundColor:'rgba(75, 192, 192, 0.5)'}]},metrics:{usage:{current:yourData.reduce((a,b)=>a+b,0)/12,industryAvg:75,percentile:65},cost:{current:yourData.reduce((a,b)=>a+b,0)/12*0.15,industryAvg:75*0.15,percentile:58},efficiency:{score:72,potential:15,rank:'B'}},recommendations:[{title:'Peak Demand Management',potential:8,difficulty:'medium'},{title:'Equipment Upgrades',potential:12,difficulty:'high'},{title:'Usage Schedule Optimization',potential:5,difficulty:'low'}]};};useEffect(()=>{setLoading(true);// Simulate API call\nsetTimeout(()=>{setBenchmarkData(generateBenchmarkData());setLoading(false);},1500);},[utilityType,timeframe,region,industryType,buildingSize]);const getPerformanceColor=percentile=>{if(percentile>=75)return'success';if(percentile>=50)return'warning';return'error';};const getDifficultyColor=difficulty=>{switch(difficulty){case'low':return'success';case'medium':return'warning';case'high':return'error';default:return'default';}};if(loading){return/*#__PURE__*/_jsx(Box,{sx:{width:'100%',mt:4},children:/*#__PURE__*/_jsx(LinearProgress,{})});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Benchmarking & Comparison\"}),/*#__PURE__*/_jsx(Paper,{sx:{p:3,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Utility Type\"}),/*#__PURE__*/_jsxs(Select,{value:utilityType,label:\"Utility Type\",onChange:e=>setUtilityType(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"electricity\",children:\"Electricity\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"water\",children:\"Water\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"gas\",children:\"Gas\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Timeframe\"}),/*#__PURE__*/_jsxs(Select,{value:timeframe,label:\"Timeframe\",onChange:e=>setTimeframe(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"quarterly\",children:\"Quarterly\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"yearly\",children:\"Yearly\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Region\"}),/*#__PURE__*/_jsxs(Select,{value:region,label:\"Region\",onChange:e=>setRegion(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All Regions\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"northeast\",children:\"Northeast\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"southeast\",children:\"Southeast\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"midwest\",children:\"Midwest\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"west\",children:\"West\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Industry Type\"}),/*#__PURE__*/_jsxs(Select,{value:industryType,label:\"Industry Type\",onChange:e=>setIndustryType(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All Industries\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"commercial\",children:\"Commercial\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"industrial\",children:\"Industrial\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"residential\",children:\"Residential\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"retail\",children:\"Retail\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Building Size\"}),/*#__PURE__*/_jsxs(Select,{value:buildingSize,label:\"Building Size\",onChange:e=>setBuildingSize(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"All Sizes\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"small\",children:\"Small (<10,000 sq ft)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"medium\",children:\"Medium (10,000-50,000 sq ft)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"large\",children:\"Large (>50,000 sq ft)\"})]})]})})]})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Usage Performance\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{flexGrow:1},children:benchmarkData.metrics.usage.current.toFixed(1)}),/*#__PURE__*/_jsx(Chip,{label:`${benchmarkData.metrics.usage.percentile}th percentile`,color:getPerformanceColor(benchmarkData.metrics.usage.percentile)})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Industry Average: \",benchmarkData.metrics.usage.industryAvg.toFixed(1)]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Cost Performance\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{flexGrow:1},children:[\"$\",benchmarkData.metrics.cost.current.toFixed(2)]}),/*#__PURE__*/_jsx(Chip,{label:`${benchmarkData.metrics.cost.percentile}th percentile`,color:getPerformanceColor(benchmarkData.metrics.cost.percentile)})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Industry Average: $\",benchmarkData.metrics.cost.industryAvg.toFixed(2)]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Efficiency Score\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{flexGrow:1},children:benchmarkData.metrics.efficiency.score}),/*#__PURE__*/_jsx(Chip,{label:`Grade ${benchmarkData.metrics.efficiency.rank}`,color:getPerformanceColor(benchmarkData.metrics.efficiency.score)})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Improvement Potential: \",benchmarkData.metrics.efficiency.potential,\"%\"]})]})})})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Consumption Comparison\"}),/*#__PURE__*/_jsx(Box,{sx:{height:400},children:/*#__PURE__*/_jsx(Line,{data:benchmarkData.consumption,options:{responsive:true,maintainAspectRatio:false,interaction:{mode:'index',intersect:false},plugins:{legend:{position:'top'},title:{display:false}},scales:{y:{title:{display:true,text:'Consumption (kWh)'}}}}})})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Improvement Recommendations\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Recommendation\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Savings Potential\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Implementation Difficulty\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:benchmarkData.recommendations.map((rec,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:rec.title}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(TrendingUpIcon,{color:\"success\",sx:{mr:1}}),rec.potential,\"%\"]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Chip,{label:rec.difficulty.charAt(0).toUpperCase()+rec.difficulty.slice(1),color:getDifficultyColor(rec.difficulty),size:\"small\"})})]},index))})]})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Grid","Select","MenuItem","FormControl","InputLabel","Button","Stack","CircularProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Tooltip","IconButton","Chip","LinearProgress","Card","CardContent","InfoIcon","CompareArrowsIcon","TrendingUpIcon","TrendingDownIcon","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","ChartTooltip","Legend","Line","Bar","jsx","_jsx","jsxs","_jsxs","register","Benchmarking","loading","setLoading","utilityType","setUtilityType","timeframe","setTimeframe","region","setRegion","industryType","setIndustryType","buildingSize","setBuildingSize","benchmarkData","setBenchmarkData","generateBenchmarkData","months","yourData","map","Math","random","industryAvg","topPerformers","consumption","labels","datasets","label","data","borderColor","backgroundColor","metrics","usage","current","reduce","a","b","percentile","cost","efficiency","score","potential","rank","recommendations","title","difficulty","setTimeout","getPerformanceColor","getDifficultyColor","sx","width","mt","children","variant","gutterBottom","p","mb","container","spacing","item","xs","md","fullWidth","value","onChange","e","target","display","alignItems","flexGrow","toFixed","color","height","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","scales","y","text","align","rec","index","justifyContent","mr","charAt","toUpperCase","slice","size"],"sources":["C:/Users/vpmar/OneDrive/Área de Trabalho/Chris/CascadeProjects/windsurf-project/utility-bill-manager/frontend/src/pages/Benchmarking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Grid,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n  Stack,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  IconButton,\n  Chip,\n  LinearProgress,\n  Card,\n  CardContent,\n} from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip as ChartTooltip,\n  Legend,\n} from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  ChartTooltip,\n  Legend\n);\n\nexport default function Benchmarking() {\n  const [loading, setLoading] = useState(true);\n  const [utilityType, setUtilityType] = useState('electricity');\n  const [timeframe, setTimeframe] = useState('monthly');\n  const [region, setRegion] = useState('all');\n  const [industryType, setIndustryType] = useState('all');\n  const [buildingSize, setBuildingSize] = useState('all');\n  const [benchmarkData, setBenchmarkData] = useState(null);\n\n  // Simulated benchmark data\n  const generateBenchmarkData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const yourData = months.map(() => Math.random() * 100 + 50);\n    const industryAvg = months.map(() => 75);\n    const topPerformers = months.map(() => 45);\n    \n    return {\n      consumption: {\n        labels: months,\n        datasets: [\n          {\n            label: 'Your Usage',\n            data: yourData,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n          {\n            label: 'Industry Average',\n            data: industryAvg,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          },\n          {\n            label: 'Top Performers',\n            data: topPerformers,\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          },\n        ],\n      },\n      metrics: {\n        usage: {\n          current: yourData.reduce((a, b) => a + b, 0) / 12,\n          industryAvg: 75,\n          percentile: 65,\n        },\n        cost: {\n          current: (yourData.reduce((a, b) => a + b, 0) / 12) * 0.15,\n          industryAvg: 75 * 0.15,\n          percentile: 58,\n        },\n        efficiency: {\n          score: 72,\n          potential: 15,\n          rank: 'B',\n        },\n      },\n      recommendations: [\n        {\n          title: 'Peak Demand Management',\n          potential: 8,\n          difficulty: 'medium',\n        },\n        {\n          title: 'Equipment Upgrades',\n          potential: 12,\n          difficulty: 'high',\n        },\n        {\n          title: 'Usage Schedule Optimization',\n          potential: 5,\n          difficulty: 'low',\n        },\n      ],\n    };\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setBenchmarkData(generateBenchmarkData());\n      setLoading(false);\n    }, 1500);\n  }, [utilityType, timeframe, region, industryType, buildingSize]);\n\n  const getPerformanceColor = (percentile) => {\n    if (percentile >= 75) return 'success';\n    if (percentile >= 50) return 'warning';\n    return 'error';\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'low':\n        return 'success';\n      case 'medium':\n        return 'warning';\n      case 'high':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ width: '100%', mt: 4 }}>\n        <LinearProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Benchmarking & Comparison\n      </Typography>\n\n      {/* Filters */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth>\n              <InputLabel>Utility Type</InputLabel>\n              <Select\n                value={utilityType}\n                label=\"Utility Type\"\n                onChange={(e) => setUtilityType(e.target.value)}\n              >\n                <MenuItem value=\"electricity\">Electricity</MenuItem>\n                <MenuItem value=\"water\">Water</MenuItem>\n                <MenuItem value=\"gas\">Gas</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth>\n              <InputLabel>Timeframe</InputLabel>\n              <Select\n                value={timeframe}\n                label=\"Timeframe\"\n                onChange={(e) => setTimeframe(e.target.value)}\n              >\n                <MenuItem value=\"monthly\">Monthly</MenuItem>\n                <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                <MenuItem value=\"yearly\">Yearly</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth>\n              <InputLabel>Region</InputLabel>\n              <Select\n                value={region}\n                label=\"Region\"\n                onChange={(e) => setRegion(e.target.value)}\n              >\n                <MenuItem value=\"all\">All Regions</MenuItem>\n                <MenuItem value=\"northeast\">Northeast</MenuItem>\n                <MenuItem value=\"southeast\">Southeast</MenuItem>\n                <MenuItem value=\"midwest\">Midwest</MenuItem>\n                <MenuItem value=\"west\">West</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth>\n              <InputLabel>Industry Type</InputLabel>\n              <Select\n                value={industryType}\n                label=\"Industry Type\"\n                onChange={(e) => setIndustryType(e.target.value)}\n              >\n                <MenuItem value=\"all\">All Industries</MenuItem>\n                <MenuItem value=\"commercial\">Commercial</MenuItem>\n                <MenuItem value=\"industrial\">Industrial</MenuItem>\n                <MenuItem value=\"residential\">Residential</MenuItem>\n                <MenuItem value=\"retail\">Retail</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth>\n              <InputLabel>Building Size</InputLabel>\n              <Select\n                value={buildingSize}\n                label=\"Building Size\"\n                onChange={(e) => setBuildingSize(e.target.value)}\n              >\n                <MenuItem value=\"all\">All Sizes</MenuItem>\n                <MenuItem value=\"small\">Small (&lt;10,000 sq ft)</MenuItem>\n                <MenuItem value=\"medium\">Medium (10,000-50,000 sq ft)</MenuItem>\n                <MenuItem value=\"large\">Large (&gt;50,000 sq ft)</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Performance Metrics */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Usage Performance\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h4\" sx={{ flexGrow: 1 }}>\n                  {benchmarkData.metrics.usage.current.toFixed(1)}\n                </Typography>\n                <Chip\n                  label={`${benchmarkData.metrics.usage.percentile}th percentile`}\n                  color={getPerformanceColor(benchmarkData.metrics.usage.percentile)}\n                />\n              </Box>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Industry Average: {benchmarkData.metrics.usage.industryAvg.toFixed(1)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Cost Performance\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h4\" sx={{ flexGrow: 1 }}>\n                  ${benchmarkData.metrics.cost.current.toFixed(2)}\n                </Typography>\n                <Chip\n                  label={`${benchmarkData.metrics.cost.percentile}th percentile`}\n                  color={getPerformanceColor(benchmarkData.metrics.cost.percentile)}\n                />\n              </Box>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Industry Average: ${benchmarkData.metrics.cost.industryAvg.toFixed(2)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Efficiency Score\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h4\" sx={{ flexGrow: 1 }}>\n                  {benchmarkData.metrics.efficiency.score}\n                </Typography>\n                <Chip\n                  label={`Grade ${benchmarkData.metrics.efficiency.rank}`}\n                  color={getPerformanceColor(benchmarkData.metrics.efficiency.score)}\n                />\n              </Box>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Improvement Potential: {benchmarkData.metrics.efficiency.potential}%\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Consumption Comparison Chart */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Consumption Comparison\n        </Typography>\n        <Box sx={{ height: 400 }}>\n          <Line\n            data={benchmarkData.consumption}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              interaction: {\n                mode: 'index',\n                intersect: false,\n              },\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n                title: {\n                  display: false,\n                },\n              },\n              scales: {\n                y: {\n                  title: {\n                    display: true,\n                    text: 'Consumption (kWh)',\n                  },\n                },\n              },\n            }}\n          />\n        </Box>\n      </Paper>\n\n      {/* Recommendations */}\n      <Paper sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Improvement Recommendations\n        </Typography>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Recommendation</TableCell>\n                <TableCell align=\"right\">Savings Potential</TableCell>\n                <TableCell align=\"right\">Implementation Difficulty</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {benchmarkData.recommendations.map((rec, index) => (\n                <TableRow key={index}>\n                  <TableCell>{rec.title}</TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                      <TrendingUpIcon color=\"success\" sx={{ mr: 1 }} />\n                      {rec.potential}%\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Chip\n                      label={rec.difficulty.charAt(0).toUpperCase() + rec.difficulty.slice(1)}\n                      color={getDifficultyColor(rec.difficulty)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}